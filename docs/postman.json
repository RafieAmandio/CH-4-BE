{
  "info": {
    "name": "CH-4-BE API Collection",
    "description": "Complete API collection for Challenge 4 Backend - Authentication, User Management, and Event Management",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      { "key": "token", "value": "{{auth_token}}", "type": "string" }
    ]
  },
  "variable": [
    { "key": "base_url", "value": "http://localhost:3000/api", "type": "string" },
    { "key": "auth_token", "value": "", "type": "string" },
    { "key": "event_id", "value": "", "type": "string" }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set base URL if not already set",
          "if (!pm.collectionVariables.get('base_url')) {",
          "  pm.collectionVariables.set('base_url', 'http://localhost:3000/api');",
          "}"
        ]
      }
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/health",
          "host": ["{{base_url}}"],
          "path": ["health"]
        },
        "description": "Check if the API is running and healthy"
      },
      "response": [
        {
          "name": "Success Response",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [{ "key": "Content-Type", "value": "application/json" }],
          "cookie": [],
          "body": "{\n  \"status\": \"ok\",\n  \"message\": \"API is running\"\n}"
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "auth": { "type": "noauth" },
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"auth\": \"EMAIL\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\",\n  \"username\": \"johndoe\",\n  \"name\": \"John Doe\",\n  \"nickname\": \"Johnny\",\n  \"photo\": \"https://example.com/photo.jpg\",\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user with email and password"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [{ "key": "Content-Type", "value": "application/json" }],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"auth\": \"EMAIL\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\",\n  \"username\": \"johndoe\",\n  \"name\": \"John Doe\",\n  \"nickname\": \"Johnny\",\n  \"photo\": \"https://example.com/photo.jpg\",\n  \"is_active\": true\n}"
                },
                "url": {
                  "raw": "{{base_url}}/auth/register",
                  "host": ["{{base_url}}"],
                  "path": ["auth", "register"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [{ "key": "Content-Type", "value": "application/json" }],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"User registered successfully\",\n  \"data\": {\n    \"user\": {\n      \"id\": \"user_id_123\",\n      \"auth\": \"EMAIL\",\n      \"email\": \"john.doe@example.com\",\n      \"username\": \"johndoe\",\n      \"name\": \"John Doe\",\n      \"nickname\": \"Johnny\",\n      \"photo_link\": \"https://example.com/photo.jpg\",\n      \"is_active\": true,\n      \"created_at\": \"2024-01-01T00:00:00.000Z\",\n      \"updated_at\": \"2024-01-01T00:00:00.000Z\"\n    },\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n  },\n  \"errors\": []\n}"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "  const response = pm.response.json();",
                  "  pm.collectionVariables.set('auth_token', response.data?.token || '');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Login User",
          "auth": { "type": "noauth" },
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Login with email and password"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [{ "key": "Content-Type", "value": "application/json" }],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/auth/login",
                  "host": ["{{base_url}}"],
                  "path": ["auth", "login"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [{ "key": "Content-Type", "value": "application/json" }],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Login successful\",\n  \"data\": {\n    \"user\": {\n      \"id\": \"user_id_123\",\n      \"auth\": \"EMAIL\",\n      \"email\": \"john.doe@example.com\",\n      \"username\": \"johndoe\",\n      \"name\": \"John Doe\",\n      \"nickname\": \"Johnny\",\n      \"photo_link\": \"https://example.com/photo.jpg\",\n      \"is_active\": true,\n      \"created_at\": \"2024-01-01T00:00:00.000Z\",\n      \"updated_at\": \"2024-01-01T00:00:00.000Z\"\n    },\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n  },\n  \"errors\": []\n}"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "  const response = pm.response.json();",
                  "  pm.collectionVariables.set('auth_token', response.data?.token || '');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "OAuth Callback",
          "auth": { "type": "noauth" },
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"001234.abc123def456.7890\",\n  \"email\": \"john.doe@example.com\",\n  \"name\": \"John Doe\",\n  \"provider\": \"APPLE\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/callback",
              "host": ["{{base_url}}"],
              "path": ["auth", "callback"]
            },
            "description": "OAuth callback endpoint for Apple, LinkedIn, or Email providers"
          },
          "response": [
            {
              "name": "New User Created",
              "originalRequest": {
                "method": "POST",
                "header": [{ "key": "Content-Type", "value": "application/json" }],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"001234.abc123def456.7890\",\n  \"email\": \"john.doe@example.com\",\n  \"name\": \"John Doe\",\n  \"provider\": \"APPLE\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/auth/callback",
                  "host": ["{{base_url}}"],
                  "path": ["auth", "callback"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [{ "key": "Content-Type", "value": "application/json" }],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"User created and logged in successfully\",\n  \"data\": {\n    \"user\": {\n      \"id\": \"001234.abc123def456.7890\",\n      \"auth\": \"APPLE\",\n      \"email\": \"john.doe@example.com\",\n      \"username\": \"John Doe\",\n      \"name\": \"John Doe\",\n      \"nickname\": \"John Doe\",\n      \"photo_link\": \"\",\n      \"is_active\": true,\n      \"created_at\": \"2024-01-01T00:00:00.000Z\",\n      \"updated_at\": \"2024-01-01T00:00:00.000Z\"\n    },\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n  },\n  \"errors\": []\n}"
            },
            {
              "name": "Existing User Login",
              "originalRequest": {
                "method": "POST",
                "header": [{ "key": "Content-Type", "value": "application/json" }],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"linkedin_user_12345\",\n  \"email\": \"existing.user@example.com\",\n  \"name\": \"Existing User\",\n  \"provider\": \"LINKEDIN\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/auth/callback",
                  "host": ["{{base_url}}"],
                  "path": ["auth", "callback"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [{ "key": "Content-Type", "value": "application/json" }],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Login successful\",\n  \"data\": {\n    \"user\": {\n      \"id\": \"existing_user_id\",\n      \"auth\": \"LINKEDIN\",\n      \"email\": \"existing.user@example.com\",\n      \"username\": \"existinguser\",\n      \"name\": \"Existing User\",\n      \"nickname\": \"ExistingUser\",\n      \"photo_link\": \"https://example.com/existing-photo.jpg\",\n      \"is_active\": true,\n      \"created_at\": \"2024-01-01T00:00:00.000Z\",\n      \"updated_at\": \"2024-01-01T00:00:00.000Z\"\n    },\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n  },\n  \"errors\": []\n}"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "  const response = pm.response.json();",
                  "  pm.collectionVariables.set('auth_token', response.data?.token || '');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            },
            "description": "Get the current authenticated user's profile (requires authentication)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/auth/profile",
                  "host": ["{{base_url}}"],
                  "path": ["auth", "profile"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [{ "key": "Content-Type", "value": "application/json" }],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Profile retrieved successfully\",\n  \"data\": {\n    \"id\": \"user_id_123\",\n    \"auth\": \"EMAIL\",\n    \"email\": \"john.doe@example.com\",\n    \"username\": \"johndoe\",\n    \"name\": \"John Doe\",\n    \"nickname\": \"Johnny\",\n    \"photo_link\": \"https://example.com/photo.jpg\",\n    \"is_active\": true,\n    \"created_at\": \"2024-01-01T00:00:00.000Z\",\n    \"updated_at\": \"2024-01-01T00:00:00.000Z\"\n  },\n  \"errors\": []\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Events",
      "item": [
        {
          "name": "Create Event",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Tech Conference 2025\",\n  \"datetime\": \"2025-03-15T09:00:00Z\",\n  \"description\": \"Annual technology conference for networking and learning\",\n  \"location\": \"Jakarta Convention Center\",\n  \"maxParticipants\": 500\n}"
            },
            "url": {
              "raw": "{{base_url}}/events",
              "host": ["{{base_url}}"],
              "path": ["events"]
            },
            "description": "Create a new event (requires authentication)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [{ "key": "Content-Type", "value": "application/json" }],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Tech Conference 2025\",\n  \"datetime\": \"2025-03-15T09:00:00Z\",\n  \"description\": \"Annual technology conference for networking and learning\",\n  \"location\": \"Jakarta Convention Center\",\n  \"maxParticipants\": 500\n}"
                },
                "url": {
                  "raw": "{{base_url}}/events",
                  "host": ["{{base_url}}"],
                  "path": ["events"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [{ "key": "Content-Type", "value": "application/json" }],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Event created successfully\",\n  \"data\": {\n    \"event\": {\n      \"id\": \"01HJD8Q9PQWERTY123456789\",\n      \"name\": \"Tech Conference 2025\",\n      \"start\": \"2025-03-15T09:00:00.000Z\",\n      \"end\": \"2025-03-15T11:00:00.000Z\",\n      \"detail\": \"Annual technology conference for networking and learning\",\n      \"location_name\": \"Jakarta Convention Center\",\n      \"status\": \"UPCOMING\",\n      \"max_participants\": 500,\n      \"current_participants\": 0,\n      \"created_by\": \"user_id_123\",\n      \"is_active\": true,\n      \"created_at\": \"2025-01-15T00:00:00.000Z\",\n      \"updated_at\": \"2025-01-15T00:00:00.000Z\"\n    }\n  },\n  \"errors\": []\n}"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "  const response = pm.response.json();",
                  "  pm.collectionVariables.set('event_id', response.data?.event?.id || '');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get All Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/events?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["events"],
              "query": [
                { "key": "page", "value": "1", "description": "Page number (optional, default: 1)" },
                { "key": "limit", "value": "10", "description": "Items per page (optional, default: 10)" },
                { "key": "search", "value": "", "description": "Search term (optional)", "disabled": true },
                { "key": "sortBy", "value": "", "description": "Sort field: name, start, status, created_at, updated_at (optional)", "disabled": true },
                { "key": "sortOrder", "value": "", "description": "Sort order: asc, desc (optional)", "disabled": true }
              ]
            },
            "description": "Get all events with pagination and search (requires authentication)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/events?page=1&limit=10",
                  "host": ["{{base_url}}"],
                  "path": ["events"],
                  "query": [
                    { "key": "page", "value": "1" },
                    { "key": "limit", "value": "10" }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [{ "key": "Content-Type", "value": "application/json" }],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Events retrieved successfully\",\n  \"data\": {\n    \"totalData\": 25,\n    \"totalPage\": 3,\n    \"entries\": [\n      {\n        \"id\": \"01HJD8Q9PQWERTY123456789\",\n        \"name\": \"Tech Conference 2025\",\n        \"start\": \"2025-03-15T09:00:00.000Z\",\n        \"end\": \"2025-03-15T11:00:00.000Z\",\n        \"detail\": \"Annual technology conference for networking\",\n        \"location_name\": \"Jakarta Convention Center\",\n        \"status\": \"UPCOMING\",\n        \"max_participants\": 500,\n        \"current_participants\": 125,\n        \"created_by\": \"user_id_123\",\n        \"is_active\": true,\n        \"created_at\": \"2025-01-01T00:00:00.000Z\",\n        \"updated_at\": \"2025-01-01T00:00:00.000Z\",\n        \"creator\": {\n          \"id\": \"user_id_123\",\n          \"name\": \"John Doe\",\n          \"username\": \"johndoe\",\n          \"email\": \"john.doe@example.com\"\n        }\n      }\n    ]\n  },\n  \"errors\": []\n}"
            }
          ]
        },
        {
          "name": "Get All Events with Search",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/events?page=1&limit=10&search=conference&sortBy=start&sortOrder=desc",
              "host": ["{{base_url}}"],
              "path": ["events"],
              "query": [
                { "key": "page", "value": "1" },
                { "key": "limit", "value": "10" },
                { "key": "search", "value": "conference" },
                { "key": "sortBy", "value": "start" },
                { "key": "sortOrder", "value": "desc" }
              ]
            },
            "description": "Get events with search and sorting (requires authentication)"
          }
        },
        {
          "name": "Get Event by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/events/{{event_id}}",
              "host": ["{{base_url}}"],
              "path": ["events", "{{event_id}}"]
            },
            "description": "Get a single event by ID (requires authentication)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/events/01HJD8Q9PQWERTY123456789",
                  "host": ["{{base_url}}"],
                  "path": ["events", "01HJD8Q9PQWERTY123456789"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [{ "key": "Content-Type", "value": "application/json" }],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Event details retrieved successfully\",\n  \"data\": {\n    \"id\": \"01HJD8Q9PQWERTY123456789\",\n    \"name\": \"Tech Conference 2025\",\n    \"start\": \"2025-03-15T09:00:00.000Z\",\n    \"end\": \"2025-03-15T11:00:00.000Z\",\n    \"detail\": \"Annual technology conference for networking professionals\",\n    \"location_name\": \"Jakarta Convention Center\",\n    \"status\": \"UPCOMING\",\n    \"max_participants\": 500,\n    \"current_participants\": 125,\n    \"created_by\": \"user_id_123\",\n    \"is_active\": true,\n    \"created_at\": \"2025-01-01T00:00:00.000Z\",\n    \"updated_at\": \"2025-01-01T00:00:00.000Z\",\n    \"creator\": {\n      \"id\": \"user_id_123\",\n      \"name\": \"John Doe\",\n      \"username\": \"johndoe\",\n      \"email\": \"john.doe@example.com\"\n    }\n  },\n  \"errors\": []\n}"
            }
          ]
        },
        {
          "name": "Update Event",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Tech Conference 2025\",\n  \"datetime\": \"2025-03-16T10:00:00Z\",\n  \"description\": \"Updated description for the annual technology conference\",\n  \"location\": \"Updated Jakarta Convention Center - Hall B\",\n  \"maxParticipants\": 600\n}"
            },
            "url": {
              "raw": "{{base_url}}/events/{{event_id}}",
              "host": ["{{base_url}}"],
              "path": ["events", "{{event_id}}"]
            },
            "description": "Update an existing event (requires authentication and ownership)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PUT",
                "header": [{ "key": "Content-Type", "value": "application/json" }],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Updated Tech Conference 2025\",\n  \"datetime\": \"2025-03-16T10:00:00Z\",\n  \"description\": \"Updated description for the annual technology conference\",\n  \"location\": \"Updated Jakarta Convention Center - Hall B\",\n  \"maxParticipants\": 600\n}"
                },
                "url": {
                  "raw": "{{base_url}}/events/01HJD8Q9PQWERTY123456789",
                  "host": ["{{base_url}}"],
                  "path": ["events", "01HJD8Q9PQWERTY123456789"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [{ "key": "Content-Type", "value": "application/json" }],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Event updated successfully\",\n  \"data\": {\n    \"id\": \"01HJD8Q9PQWERTY123456789\",\n    \"name\": \"Updated Tech Conference 2025\",\n    \"start\": \"2025-03-16T10:00:00.000Z\",\n    \"end\": \"2025-03-16T12:00:00.000Z\",\n    \"detail\": \"Updated description for the annual technology conference\",\n    \"location_name\": \"Updated Jakarta Convention Center - Hall B\",\n    \"status\": \"UPCOMING\",\n    \"max_participants\": 600,\n    \"current_participants\": 125,\n    \"created_by\": \"user_id_123\",\n    \"is_active\": true,\n    \"created_at\": \"2025-01-01T00:00:00.000Z\",\n    \"updated_at\": \"2025-01-15T10:30:00.000Z\",\n    \"creator\": {\n      \"id\": \"user_id_123\",\n      \"name\": \"John Doe\",\n      \"username\": \"johndoe\",\n      \"email\": \"john.doe@example.com\"\n    }\n  },\n  \"errors\": []\n}"
            }
          ]
        },
        {
          "name": "Delete Event (Soft)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/events/{{event_id}}",
              "host": ["{{base_url}}"],
              "path": ["events", "{{event_id}}"]
            },
            "description": "Soft delete/disable an event (creator only)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/events/01HJD8Q9PQWERTY123456789",
                  "host": ["{{base_url}}"],
                  "path": ["events", "01HJD8Q9PQWERTY123456789"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [{ "key": "Content-Type", "value": "application/json" }],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Event deleted successfully\",\n  \"data\": null,\n  \"errors\": []\n}"
            }
          ]
        },
        {
          "name": "Delete Event (Hard)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/events/{{event_id}}?hard_delete=true",
              "host": ["{{base_url}}"],
              "path": ["events", "{{event_id}}"],
              "query": [
                { "key": "hard_delete", "value": "true" }
              ]
            },
            "description": "Permanently delete an event (creator only). Adds ?hard_delete=true"
          },
          "response": [
            {
              "name": "Success Response (Hard Delete)",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/events/01HJD8Q9PQWERTY123456789?hard_delete=true",
                  "host": ["{{base_url}}"],
                  "path": ["events", "01HJD8Q9PQWERTY123456789"],
                  "query": [{ "key": "hard_delete", "value": "true" }]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [{ "key": "Content-Type", "value": "application/json" }],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Event permanently deleted\",\n  \"data\": null,\n  \"errors\": []\n}"
            }
          ]
        }
      ]
    }
  ]
}
