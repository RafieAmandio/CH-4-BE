{
    "info": {
        "name": "CH-4-BE API Collection",
        "description": "Complete API collection for Challenge 4 Backend - Authentication, User Management, Event Management, and Attendee Management",
        "version": "1.0.0",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "auth": {
        "type": "bearer",
        "bearer": [
            {
                "key": "token",
                "value": "{{auth_token}}",
                "type": "string"
            }
        ]
    },
    "variable": [
        {
            "key": "base_url",
            "value": "http://localhost:3000/api",
            "type": "string"
        },
        {
            "key": "auth_token",
            "value": "",
            "type": "string"
        },
        {
            "key": "event_id",
            "value": "",
            "type": "string"
        },
        {
            "key": "user_id",
            "value": "",
            "type": "string"
        },
        {
            "key": "attendee_token",
            "value": "",
            "type": "string"
        }
    ],
    "item": [
        {
            "name": "Health Check",
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/health",
                    "host": [
                        "{{base_url}}"
                    ],
                    "path": [
                        "health"
                    ]
                },
                "description": "Check if the API is running and healthy"
            }
        },
        {
            "name": "Authentication",
            "item": [
                {
                    "name": "Register User",
                    "auth": {
                        "type": "noauth"
                    },
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"auth\": \"EMAIL\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\",\n  \"username\": \"johndoe\",\n  \"name\": \"John Doe\",\n  \"is_active\": true\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/auth/register",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "auth",
                                "register"
                            ]
                        },
                        "description": "Register a new user with email and password"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "  const response = pm.response.json();",
                                    "  pm.collectionVariables.set('auth_token', response.data?.token || '');",
                                    "  pm.collectionVariables.set('user_id', response.data?.user?.id || '');",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                },
                {
                    "name": "Login User",
                    "auth": {
                        "type": "noauth"
                    },
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/auth/login",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "auth",
                                "login"
                            ]
                        },
                        "description": "Login with email and password"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "  const response = pm.response.json();",
                                    "  pm.collectionVariables.set('auth_token', response.data?.token || '');",
                                    "  pm.collectionVariables.set('user_id', response.data?.user?.id || '');",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                },
                {
                    "name": "OAuth Callback",
                    "auth": {
                        "type": "noauth"
                    },
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{supabase_token}}",
                                "description": "Supabase token from OAuth provider"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}"
                        },
                        "url": {
                            "raw": "{{base_url}}/auth/callback",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "auth",
                                "callback"
                            ]
                        },
                        "description": "OAuth callback endpoint for Apple, LinkedIn, or Email providers"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200 || pm.response.code === 201) {",
                                    "  const response = pm.response.json();",
                                    "  pm.collectionVariables.set('auth_token', response.data?.token || '');",
                                    "  pm.collectionVariables.set('user_id', response.data?.user?.id || '');",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                },
                {
                    "name": "Get User Profile",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/auth/profile",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "auth",
                                "profile"
                            ]
                        },
                        "description": "Get the current authenticated user's profile (requires authentication)"
                    }
                }
            ]
        },
        {
            "name": "Users",
            "item": [
                {
                    "name": "Get Professions",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/users/professions",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "users",
                                "professions"
                            ]
                        },
                        "description": "Get all professions grouped by category (requires authentication)"
                    }
                },
                {
                    "name": "Complete User Registration",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"linkedinUsername\": \"johndoe\",\n  \"photoLink\": \"https://example.com/photo.jpg\",\n  \"professionId\": \"550e8400-e29b-41d4-a716-446655440000\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/users/me/complete",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "users",
                                "me",
                                "complete"
                            ]
                        },
                        "description": "Complete user registration with profession and other details"
                    }
                },
                {
                    "name": "Get My Profile",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/users/me",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "users",
                                "me"
                            ]
                        },
                        "description": "Get current user profile"
                    }
                },
                {
                    "name": "Get My Event History",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/users/me/events",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "users",
                                "me",
                                "events"
                            ]
                        },
                        "description": "Get current user's event history"
                    }
                },
                {
                    "name": "Update My Profile",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"John Doe Updated\",\n  \"email\": \"john.updated@example.com\",\n  \"username\": \"johndoe_updated\",\n  \"linkedinUsername\": \"johndoe_updated\",\n  \"photoLink\": \"https://example.com/updated-photo.jpg\",\n  \"professionId\": \"550e8400-e29b-41d4-a716-446655440001\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/users/me",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "users",
                                "me"
                            ]
                        },
                        "description": "Update current user profile"
                    }
                },
                {
                    "name": "Get User Profile by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/users/{{user_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "users",
                                "{{user_id}}"
                            ]
                        },
                        "description": "Get user profile by ID (public endpoint)"
                    }
                }
            ]
        },
        {
            "name": "Events",
            "item": [
                {
                    "name": "Create Event",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"Tech Conference 2025\",\n  \"start\": \"2025-03-15T09:00:00Z\",\n  \"end\": \"2025-03-15T11:00:00Z\",\n  \"description\": \"Annual technology conference for networking and learning\",\n  \"locationName\": \"Jakarta Convention Center\",\n  \"locationAddress\": \"Jl. Gatot Subroto, Jakarta\",\n  \"latitude\": -6.2088,\n  \"longitude\": 106.8456,\n  \"photoLink\": \"https://example.com/event-photo.jpg\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/events",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "events"
                            ]
                        },
                        "description": "Create a new event (requires authentication)"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "  const response = pm.response.json();",
                                    "  pm.collectionVariables.set('event_id', response.data?.event?.id || '');",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                },
                {
                    "name": "Get All Events",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/events?page=1&limit=10",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "events"
                            ],
                            "query": [
                                {
                                    "key": "page",
                                    "value": "1",
                                    "description": "Page number (optional, default: 1)"
                                },
                                {
                                    "key": "limit",
                                    "value": "10",
                                    "description": "Items per page (optional, default: 10)"
                                },
                                {
                                    "key": "search",
                                    "value": "",
                                    "description": "Search term (optional)",
                                    "disabled": true
                                },
                                {
                                    "key": "sortBy",
                                    "value": "",
                                    "description": "Sort field: name, start, status, created_at, updated_at (optional)",
                                    "disabled": true
                                },
                                {
                                    "key": "sortOrder",
                                    "value": "",
                                    "description": "Sort order: asc, desc (optional)",
                                    "disabled": true
                                },
                                {
                                    "key": "filter",
                                    "value": "",
                                    "description": "Filter: created, all (optional)",
                                    "disabled": true
                                }
                            ]
                        },
                        "description": "Get all events with pagination and search (requires authentication)"
                    }
                },
                {
                    "name": "Get Event by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/events/{{event_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "events",
                                "{{event_id}}"
                            ]
                        },
                        "description": "Get a single event by ID (requires authentication)"
                    }
                },
                {
                    "name": "Update Event",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"Updated Tech Conference 2025\",\n  \"start\": \"2025-03-16T10:00:00Z\",\n  \"end\": \"2025-03-16T12:00:00Z\",\n  \"description\": \"Updated description for the annual technology conference\",\n  \"locationName\": \"Updated Jakarta Convention Center - Hall B\",\n  \"latitude\": -6.2090,\n  \"longitude\": 106.8460\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/events/{{event_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "events",
                                "{{event_id}}"
                            ]
                        },
                        "description": "Update an existing event (requires authentication and ownership)"
                    }
                },
                {
                    "name": "Delete Event (Soft)",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/events/{{event_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "events",
                                "{{event_id}}"
                            ]
                        },
                        "description": "Soft delete/disable an event (creator only)"
                    }
                },
                {
                    "name": "Delete Event (Hard)",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/events/{{event_id}}?hard_delete=true",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "events",
                                "{{event_id}}"
                            ],
                            "query": [
                                {
                                    "key": "hard_delete",
                                    "value": "true"
                                }
                            ]
                        },
                        "description": "Permanently delete an event (creator only). Adds ?hard_delete=true"
                    }
                }
            ]
        },
        {
            "name": "Attendees",
            "item": [
                {
                    "name": "Get Professions (Public)",
                    "auth": {
                        "type": "noauth"
                    },
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/attendee/professions",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "attendee",
                                "professions"
                            ]
                        },
                        "description": "Get all professions grouped by category (public endpoint)"
                    }
                },
                {
                    "name": "Validate Event by Code",
                    "auth": {
                        "type": "noauth"
                    },
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/attendee/validate-event/123456",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "attendee",
                                "validate-event",
                                "123456"
                            ]
                        },
                        "description": "Validate event by 6-digit code for registration (public endpoint)"
                    }
                },
                {
                    "name": "Register Attendee (No Auth)",
                    "auth": {
                        "type": "noauth"
                    },
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"eventCode\": \"123456\",\n  \"nickname\": \"Johnny\",\n  \"userEmail\": \"john.doe@example.com\",\n  \"professionId\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"linkedinUsername\": \"johndoe\",\n  \"photoLink\": \"https://example.com/attendee-photo.jpg\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/attendee/register",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "attendee",
                                "register"
                            ]
                        },
                        "description": "Register a new attendee for an event (no authentication required)"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "  const response = pm.response.json();",
                                    "  pm.collectionVariables.set('attendee_token', response.data?.token || '');",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                },
                {
                    "name": "Register Attendee (With Auth)",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"eventCode\": \"123456\",\n  \"nickname\": \"Johnny\",\n  \"userEmail\": \"john.doe@example.com\",\n  \"professionId\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"linkedinUsername\": \"johndoe\",\n  \"photoLink\": \"https://example.com/attendee-photo.jpg\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/attendee/register",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "attendee",
                                "register"
                            ]
                        },
                        "description": "Register a new attendee for an event (with user authentication)"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "  const response = pm.response.json();",
                                    "  pm.collectionVariables.set('attendee_token', response.data?.token || '');",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ]
                },
                {
                    "name": "Get Goals Categories",
                    "auth": {
                        "type": "bearer",
                        "bearer": [
                            {
                                "key": "token",
                                "value": "{{attendee_token}}",
                                "type": "string"
                            }
                        ]
                    },
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/attendee/goals-categories",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "attendee",
                                "goals-categories"
                            ]
                        },
                        "description": "Get all active goals categories (requires attendee authentication)"
                    }
                },
                {
                    "name": "Update Goals Category",
                    "auth": {
                        "type": "bearer",
                        "bearer": [
                            {
                                "key": "token",
                                "value": "{{attendee_token}}",
                                "type": "string"
                            }
                        ]
                    },
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"goalsCategoryId\": \"550e8400-e29b-41d4-a716-446655440002\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/attendee/goals-category",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "attendee",
                                "goals-category"
                            ]
                        },
                        "description": "Update attendee's goals category and get questions (requires attendee authentication)"
                    }
                },
                {
                    "name": "Submit Answers",
                    "auth": {
                        "type": "bearer",
                        "bearer": [
                            {
                                "key": "token",
                                "value": "{{attendee_token}}",
                                "type": "string"
                            }
                        ]
                    },
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"answers\": [\n    {\n      \"questionId\": \"550e8400-e29b-41d4-a716-446655440003\",\n      \"answerOptionId\": \"550e8400-e29b-41d4-a716-446655440004\",\n      \"textValue\": \"I want to network with other professionals\",\n      \"numberValue\": 8,\n      \"rank\": 1,\n      \"weight\": 0.8\n    },\n    {\n      \"questionId\": \"550e8400-e29b-41d4-a716-446655440005\",\n      \"textValue\": \"Learn about new technologies\",\n      \"numberValue\": 9\n    }\n  ]\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/attendee/answers",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "attendee",
                                "answers"
                            ]
                        },
                        "description": "Submit attendee answers and get AI recommendations (requires attendee authentication)"
                    }
                },
                {
                    "name": "Get Recommendations",
                    "auth": {
                        "type": "bearer",
                        "bearer": [
                            {
                                "key": "token",
                                "value": "{{attendee_token}}",
                                "type": "string"
                            }
                        ]
                    },
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/attendee/recommendations",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "attendee",
                                "recommendations"
                            ]
                        },
                        "description": "Get AI recommendations for attendee (requires attendee authentication)"
                    }
                }
            ]
        }
    ]
}